
R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin10.8.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("nleqslv")
> 
> # Dennis & Schnabel,1996,"Numerical methods for unconstrained optimization and nonlinear equations", SIAM
> # example 6.5.1 page 149
>     
> dslnex <- function(x) {
+     y <- numeric(2)
+     y[1] <- x[1]^2 + x[2]^2 - 2
+     y[2] <- exp(x[1]-1) + x[2]^3 - 2
+     y
+ }
> 
> 
> xstart <- c(2,0.5)
> fstart <- dslnex(xstart)
> xstart
[1] 2.0 0.5
> fstart
[1] 2.2500000 0.8432818
> 
> do.print.xf <- TRUE
> 
> print.result <- function(z) {
+     if( do.print.xf ) {
+         print(z$x)
+         print(z$fvec)
+     }                           
+     print(z$message)
+     print(all(abs(z$fvec)<=1e-8))
+ }
> 
> sink("dslnexCN-num.txt")
> for( z in c("dbldog","pwldog") ) {  # double dogleg, Powell (single) dogleg        
+     for( delta in c(-1.0, -2.0) ) { # Cauchy step , Newton step
+         znlq <- nleqslv(xstart, dslnex, global=z, control=list(btol=.01,delta=delta, trace=1))
+         print.result(znlq)
+     }
+ }
> sink()
> 
> sink("dslnexCN-char.txt")
> for( z in c("dbldog","pwldog") ) {  # double dogleg, Powell (single) dogleg        
+     for( delta in c("cauchy", "newton") ) { # Cauchy step , Newton step
+         znlq <- nleqslv(xstart, dslnex, global=z, control=list(btol=.01,delta=delta,trace=1))
+         print.result(znlq)
+     }
+ }
> sink()
> 
> z1 <- readLines(con="dslnexCN-num.txt")
> z2 <- readLines(con="dslnexCN-char.txt")
> 
> all.equal(z1,z2)
[1] TRUE
> 
> proc.time()
   user  system elapsed 
  0.255   0.051   0.427 
